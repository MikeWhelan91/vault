name: Daily Cleanup Cron Job

on:
  schedule:
    # Run once daily at midnight UTC (may be delayed 5-15 minutes during peak times)
    - cron: '0 0 * * *'

  # Allow manual triggering for testing
  workflow_dispatch:

jobs:
  cleanup-expired-bundles:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Vercel Daily Cleanup Endpoint
        run: |
          response=$(curl -s -w "\n%{http_code}" -X GET \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            https://forebearer.app/api/cron/daily)

          http_code=$(echo "$response" | tail -n1)
          body=$(echo "$response" | sed '$d')

          echo "HTTP Status: $http_code"
          echo "Response: $body"

          # Fail the job if the endpoint returns an error
          if [ "$http_code" -ge 400 ]; then
            echo "Error: Daily cleanup endpoint returned status $http_code"
            exit 1
          fi

          echo "✅ Daily cleanup completed successfully"

      - name: Enforce Grace Period Expiration
        run: |
          response=$(curl -s -w "\n%{http_code}" -X POST \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            https://forebearer.app/api/cron/enforce-grace-period)

          http_code=$(echo "$response" | tail -n1)
          body=$(echo "$response" | sed '$d')

          echo "HTTP Status: $http_code"
          echo "Response: $body"

          # Fail the job if the endpoint returns an error
          if [ "$http_code" -ge 400 ]; then
            echo "Error: Grace period enforcement endpoint returned status $http_code"
            exit 1
          fi

          echo "✅ Grace period enforcement completed successfully"

      - name: Notify on Failure
        if: failure()
        run: |
          echo "❌ Daily cron job failed! Check the logs above for details."
          echo "This will show up in the GitHub Actions tab as a failed run."
